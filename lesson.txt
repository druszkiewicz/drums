** L.138

// handleClick bez () - żeby nie wywołać od razu
document.querySelector('.drum').addEventListener('click', handleClick);

function handleClick() {
   alert('just clicked');

// funkcja anonimowa
document.querySelector('.drum').addEventListener('click', function() {
   alert('just clicked');
});

// pętla po wszystkich buttonach
var numberOfDrumButtons = document.querySelectorAll('.drum').length;

for (var i = 0; i < numberOfDrumButtons; i++) {
   document.querySelectorAll('.drum')[i].addEventListener('click', function() {
      alert('just clicked');
   });
}

** L.139

// Javascript w wikipedi + consola
$0

$0.innerHTML = "cos tam"

$0.addEventListener('click', function () {
console.log('I got click')
})

// przekazywanie funkkcji jako argumentu
function add (num1, num2) { 
return num1 + num2; 
}

function mul (num1, num2) { 
return num1 * num2; 
}

function Cals (num1, num2, operator) {
	return operator(num1, num2);
}

Cals(2,3,mul);

// uruchomienie debuggera
debugger; Shift + Enter
Cals(2,3,mul);

** L.141 

//play sounds
var audio = new Audio('sounds/tom-1.mp3');
audio.play();

this ---
this.innerHTML ---
this.style.color = 'white'; ---

** L.142

//objekt
var hauseKeeper1 = {
    yearsOfExperience: 12,
    name: "Jane",
    cleaningRepertoire: ["bathrom", "lobby", "bedroom"]
}

// factory - constructor function
function HauseKeeper (y,n,c) {  //nazwa z duej litery
    this.yearsOfExperience = y; 
    this.name=n;
    this.cleaningRepertoire=c;
}

//wywołanie
var hk1 = new HauseKeeper(10, "Anna", ["English", "French"]);

** L.143

or (var i = 0; i < numberOfDrumButtons; i++) {
   document.querySelectorAll('.drum')[i].addEventListener('click', function(e) {
      //alert('just clicked');
      // console.log(this.innerHTML);
      // this.style.color = 'white';
      // console.log(e);

      var buttonInnerHtml = this.innerHTML;

      switch (buttonInnerHtml) {
        case "w":
          var tom1 = new Audio('sounds/tom-1.mp3');
          tom1.play();  
          break;

          ..........................

** L. 144, 145 - method
function HauseKeeper (y,n,c) {
    this.yearsOfExperience = y; 
    this.name=n;
    this.cleaningRepertoire=c;
    this.clean=function () {
        console.log("cleaded");
    }
}

var hk1 = new HauseKeeper(10, "Anna", ["English", "French"]);

//wywołanie metody
hk1.clean();

** L. 146
// event listener na klawiaturę
document.addEventListener("keydown", function (event) {
  // 
  //console.log(event.key);
  playSound(event.key);  //przeniesione do funkcji z case... 
})

** L.147

$0.addEventListener('click', function (event) {
console.log(event);
})

// testowy listener z funkcją callback
function anotherEventListener(typeOfEvent, callback) {
    
    //detect Event Code
   var eventThatHappend = {
	  eventType: "keypress",
	  key: "p",
	  duratonOfKeypress: 2,
}

if (eventThatHappend.eventType === typeOfEvent) {
	callback(eventThatHappend);
}

}

// i jego wywołanie - par. event może być dowolny...
anotherEventListener("keypress", function (event) {
console.log(event) 
});

** L.148

//animacja do buttona
function buttonAnimation(currentKey) {
   var activeButton = document.querySelector('.' + currentKey);
   activeButton.classList.add('pressed');
   setTimeout(function() {
      activeButton.classList.remove('pressed');
   }, 200);
}



